spring:
  application:
    name: invoice-service
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: invoice-consumer-group
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  datasource:
    url: jdbc:h2:mem:invoicedb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect

server:
  port: 8082

resilience4j:
  thread-pool-bulkhead:
    instances:
      invoiceEventProcessor:
        # 3 threads are always kept alive
        core-thread-pool-size: 3
        # if 3 core threads are busy, 2 more are created temporarily
        max-thread-pool-size: 5
        # if all 5 threads are busy, 10 events can be queued before starting rejecting
        queue-capacity: 10
